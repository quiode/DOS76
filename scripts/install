#!/bin/bash
# This script installs all packages and configfiles, removes old config filesset

# Constants
SCRIPT_DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
# Variables
unalias cp
# Functions
leave() {
    echo "Aborting..."
    exit 1
}

install_packages(){
    echo -e "\e[34mInstalling Packages\e[0m"
    #APT
    echo -e "\e[34mAPT\e[0m"
    # OneDrive Repositories
    echo 'deb https://download.opensuse.org/repositories/home:/npreining:/debian-ubuntu-onedrive/xUbuntu_21.04/ ./' >> /etc/apt/sources.list
    wget https://download.opensuse.org/repositories/home:/npreining:/debian-ubuntu-onedrive/xUbuntu_21.04/Release.key
    sudo apt-key add ./Release.key
    rm ./Release.key
    
    sudo add-apt-repository -y universe multiverse
    sudo apt-get update
    sudo apt-get upgrade -y
    filepath=$SCRIPT_DIR"/../packages/apt.txt"
    packages=''
    while read line
    do
        packages=$packages' '$line
    done < "$filepath"
    echo -e "\e[34mInstalling: $packages\e[0m"
    sudo apt-get install -y "$packages"
    # FLATPAK
    echo -e "\e[34mFLATPAK\e[0m"
    flatpak update
    filepath=$SCRIPT_DIR"/../packages/flatpak.txt"
    packages=''
    while read line
    do
        packages=$packages' '$line
    done < "$filepath"
    echo -e "\e[34mInstalling: $packages\e[0m"
    flatpak install -y "$packages"
    # SNAP
    echo -e "\e[34mSNAP\e[0m"
    sudo snap refresh
    filepath=$SCRIPT_DIR"/../packages/snap.txt"
    packages=''
    while read line
    do
        packages=$packages' '$line
    done < "$filepath"
    echo -e "\e[34mInstalling: $packages\e[0m"
    sudo snap install "$packages"
}

install_configs(){
    # Gnome Terminal Dracula Theme
    echo -e "\e[34mSetting Gnome Terminal...\e[0m"
    git clone https://github.com/dracula/gnome-terminal
    cd gnome-terminal || exit
    ./install.sh
    cd ../
    rm -rf gnome-terminal
    
    eval "$(dircolors "/home/$USER/.dir_colors/dircolors")"
    
    # Neovim
    # echo -e "\e[34mSetting Neovim...\e[0m"
    # echo 'alias v=nvim' >> /home/$USER/.bashrc # alias for nvim
    
    # OneDrive
    echo -e "\e[34mSetting OneDrive...\e[0m"
    choice=''
    while :
    do
        read -r -p 'OneDrive is going to be set-up. If you want to use another directory than the standard one, specify it now. Use <Enter> for the default one.' choice
        if [ -d "$choice" ]
        then
            if [ -w "$choice" ]
            then
                break
            else
                echo -e "\e[31mThe specified directory is not writeable. Please try again...\e[0m"
            fi
        elif
        [ -z "$choice" ]
        then
            choice='/home/'$USER'/OneDrive'
            break
        else
            echo -e "\e[31mThe directory you specified does not exist. Please try again.\e[0m"
        fi
    done
    
    echo -e "\e[34mPlease authenticate with your personal account.\e[0m"
    sleep 2
    onedrive
    # Copy the personal account config files
    cp -r "$SCRIPT_DIR""/../configs/onedrive/onedrive/config" /home/"$USER"/.config/onedrive
    
    # TODO add a check if there already is a folder, if so, notify that it will be overwritten
    mkdir "$choice"
    # Replace the default save-location with the one specified
    mkdir "$choice"'/Private/'
    cd /home/"$USER"/.config/onedrive || exit
    
    # https://stackoverflow.com/questions/11145270/how-to-replace-an-entire-line-in-a-text-file-by-line-number
    sed -i '7s#.*#sync_dir = "'"$choice"'/Private/"#' config
    
    # Make onedrive school setup
    cp -r "$SCRIPT_DIR""/../configs/onedrive/onedrive-school" /home/"$USER"/.config/
    
    # Replace the default save-location with the one specified
    mkdir "$choice"'/School/'
    cd /home/"$USER"/.config/onedrive-school || exit
    
    # https://stackoverflow.com/questions/11145270/how-to-replace-an-entire-line-in-a-text-file-by-line-number
    sed -i '7s#.*#sync_dir = "'"$choice"'/School/"#' config
    
    echo -e "\e[34mPlease authenticate with your school account.\e[0m"
    sleep 2
    onedrive --confdir="~/.config/onedrive-school"
    
    # Setup notification daemon for OneDrive Private
    sudo systemctl stop onedrive@"$USER".service
    sudo systemctl disable onedrive@"$USER".service
    
    systemctl --user enable onedrive
    systemctl --user start onedrive
    
    # Setup notification daemon for OneDrive School
    cd /usr/lib/systemd/user/ || exit
    sudo cp onedrive.service onedrive-school.service
    
    sed -i '8s#.*#ExecStart=/usr/bin/onedrive --monitor --confdir="/home/'"$USER"'/.config/onedrive-school#' onedrive-school.service
    
    systemctl --user enable onedrive-school
    systemctl --user start onedrive-school
    
    # Install scripts
    cd "$SCRIPT_DIR" || exit
    git clone https://github.com/quiode/scripts
    cd scripts || exit
    sudo cp -r onedrive/onedrive-status /opt && chmod +x /opt/onedrive-status # Install onedrive-status script
    
    sudo rm -r "$SCRIPT_DIR"/scripts # clean up
    
    # copy bash files
    cp -r "$SCRIPT_DIR""/../configs/bash/." /home/"$USER"/
    
    # NVM
    # TODO: implement
}


if [[ $EUID -eq 0 ]]; then
    echo -e "\e[31mDo not run this as the root user\e[0m"
    leave
fi

while true
do
    read -r -p 'If you continue, all packages will be downloaded. Do you want to continue [Y/n]?' choice
    case "$choice" in
        n|N) leave;;
        *) break;;
    esac
done

install_packages

while true
do
    read -r -p 'If you continue, all config files will be overritten. Do you want to continue [Y/n]?' choice
    case "$choice" in
        n|N) leave;;
        *) break;;
    esac
done

install_configs